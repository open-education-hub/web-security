"use strict";(self.webpackChunkweb_security=self.webpackChunkweb_security||[]).push([[150],{443:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/wireshark-decrypt-c473b20402507361d2e02bd67889ab66.png"},632:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=n(8168),a=(n(6540),n(5680));const r={},s="Securing Communication",o={unversionedId:"Network and communication security/Securing communication/Reading/README",id:"Network and communication security/Securing communication/Reading/README",title:"Securing Communication",description:"Introduction",source:"@site/docs/Network and communication security/Securing communication/Reading/README.md",sourceDirName:"Network and communication security/Securing communication/Reading",slug:"/Network and communication security/Securing communication/Reading/",permalink:"/web-security/Network and communication security/Securing communication/Reading/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Reading",permalink:"/web-security/Network and communication security/Securing communication/Reading/"},next:{title:"securing-communication",permalink:"/web-security/Network and communication security/Securing communication/securing-communication"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Reminders and Prerequisites",id:"reminders-and-prerequisites",level:2},{value:"Confidentiality",id:"confidentiality",level:2},{value:"Public Key Cryptography. Certificates",id:"public-key-cryptography-certificates",level:2},{value:"Identity Management. Certificates",id:"identity-management-certificates",level:3},{value:"Inspecting Certificates",id:"inspecting-certificates",level:3},{value:"Verifying Certificates",id:"verifying-certificates",level:3},{value:"HTTPS, SSL and TLS",id:"https-ssl-and-tls",level:2},{value:"Capturing, Inspecting and Verifying HTTPS Certificates",id:"capturing-inspecting-and-verifying-https-certificates",level:3},{value:"Validation and Assessment of Remote Certificates",id:"validation-and-assessment-of-remote-certificates",level:3},{value:"Summary of Commands",id:"summary-of-commands",level:2},{value:"Challenges",id:"challenges",level:2},{value:"01. Investigate SSL/TLS-enabled Websites",id:"01-investigate-ssltls-enabled-websites",level:3},{value:"02. Investigate Remote SSL/TLS Certificates",id:"02-investigate-remote-ssltls-certificates",level:3},{value:"03. Investigate Remote SSL/TLS Certificates with SNI",id:"03-investigate-remote-ssltls-certificates-with-sni",level:3},{value:"04. Inspect Me PEM",id:"04-inspect-me-pem",level:3},{value:"05. Inspect Me DER",id:"05-inspect-me-der",level:3},{value:"06. The Chosen One",id:"06-the-chosen-one",level:3},{value:"07. Proper Naming",id:"07-proper-naming",level:3},{value:"08. Inside",id:"08-inside",level:3},{value:"09. Only for Members",id:"09-only-for-members",level:3},{value:"Extra: Tutorial: Inspect HTTPS Traffic",id:"extra-tutorial-inspect-https-traffic",level:3},{value:"Resources and Tools",id:"resources-and-tools",level:2},{value:"Further Reading",id:"further-reading",level:2}],g={toc:l},p="wrapper";function d({components:e,...t}){return(0,a.yg)(p,(0,i.A)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"securing-communication"},"Securing Communication"),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"As part of this session, we look into how HTTP connections can be made secure, to prevent attacks that capture traffic, also called ",(0,a.yg)("a",{parentName:"p",href:"https://www.thesslstore.com/blog/man-in-the-middle-attack-2/"},"man-in-the-middle (MitM) attacks"),".\nThe session is focused on understanding certificates and HTTPS and investigating configurations of existing setups."),(0,a.yg)("h2",{id:"reminders-and-prerequisites"},"Reminders and Prerequisites"),(0,a.yg)("p",null,"HTTP (",(0,a.yg)("em",{parentName:"p"},"Hypertext Transfer Protocol"),") is the main protocol of the web.\nIt has several characteristics:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"it is plain text"),(0,a.yg)("li",{parentName:"ul"},"it doesn't maintain an active connection"),(0,a.yg)("li",{parentName:"ul"},"it's a request-response protocol"),(0,a.yg)("li",{parentName:"ul"},"it provides a series of codes to mark the types of requests and replies"),(0,a.yg)("li",{parentName:"ul"},"HTTP requests consists of paths (routes) that are mapped to resources")),(0,a.yg)("p",null,"The lack of an active connection session is compensated by the use of cookies.\nSimilarly, the plain text nature of the protocol means that anyone could read contents in HTTP network packets.\nThis is alleviated by the use of HTTPS.\nNowadays, most connections use HTTPS precisely because of the need for confidentiality."),(0,a.yg)("p",null,"In the previous session, you used web browsers and the ",(0,a.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools"},"Developer Tools")," feature of modern browsers to inspect traffic, update cookies, inspect rendered pages.\nGUI web browsers (such as Firefox, Chrome, Edge, Safari) provide the appealing interface for users to surf the web.\nFor quick and dirty tasks such as testing connections, making requests and downloading large files, we use CLI web clients such as ",(0,a.yg)("inlineCode",{parentName:"p"},"curl")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"wget"),".\nWe will be using these in this session as well."),(0,a.yg)("h2",{id:"confidentiality"},"Confidentiality"),(0,a.yg)("p",null,"Confidentiality is a security property that prevents captured data from being understood by an attacker.\nIf an attacker captures data with confidentiality ensured, the attacker must not be able to extract actual information from it.\nConfidentiality is generally provided with encryption."),(0,a.yg)("p",null,"For example, a classical HTTP connection is plain text and thus non-confidential.\nLet's exemplify this.\nOn one terminal, start a ",(0,a.yg)("inlineCode",{parentName:"p"},"tcpdump")," capture session for HTTP connections:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ sudo tcpdump -A tcp port 80\n")),(0,a.yg)("p",null,"On another terminal, make an HTTP connection using ",(0,a.yg)("inlineCode",{parentName:"p"},"curl"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ curl http://elf.cs.pub.ro\n")),(0,a.yg)("p",null,"As the connection is HTTP, you will see plain text messages as part of the ",(0,a.yg)("inlineCode",{parentName:"p"},"tcpdump")," output:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'Host: elf.cs.pub.ro\nUser-Agent: curl/7.58.0\nAccept: */*\n\n[...]\nDate: Sun, 03 Jul 2022 15:51:46 GMT\nServer: Apache/2.4.38 (Debian)\nLast-Modified: Mon, 02 Aug 2010 17:58:06 GMT\nETag: "a8-48cdaf14da780"\nAccept-Ranges: bytes\nContent-Length: 168\nVary: Accept-Encoding\nContent-Type: text/html\n\n<html>\n    <head>\n        <meta name="google-site-verification" content="gTsIxyV43HSJraRPl6X1A5jzGFgQ3N__hKAcuL2QsO8" />\n    </head>\n\n    <body>\n        <h1>It works!</h1>\n    </body>\n</html>\n')),(0,a.yg)("p",null,"However, if we used ",(0,a.yg)("inlineCode",{parentName:"p"},"curl")," and an HTTPS connection:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ curl https://elf.cs.pub.ro\n")),(0,a.yg)("p",null,"there would be no plain text output on the ",(0,a.yg)("inlineCode",{parentName:"p"},"tcpdump")," console, because the connection is using a confidential (encrypted) channel."),(0,a.yg)("p",null,"The same traffic inspection can be done in a more visual manner using Wireshark."),(0,a.yg)("p",null,"As long as traffic is not encrypted, an attacker able to capture packets (either fooling someone to get the data or simply accessing a networking equipment along the way) will read the traffic contents.\nHTTPS uses public key cryptography to ensure the confidentiality of network traffic."),(0,a.yg)("h2",{id:"public-key-cryptography-certificates"},"Public Key Cryptography. Certificates"),(0,a.yg)("p",null,"There are mainly two types of encryption: symmetric and public-key encryption."),(0,a.yg)("p",null,"In symmetric encryption, a key is shared among the two ends in the communication."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"symmetric encryption",src:n(3434).A,width:"1062",height:"662"})),(0,a.yg)("p",null,"That same key is used for both encrypting and decrypting data.\nAES (",(0,a.yg)("em",{parentName:"p"},"Advanced Encryption Standard"),") is the standard symmetric encryption algorithm.\nThe main benefit of symmetric encryption algorithms is their relative simplicity and speed: they are easy to implement and are fast, with the option of having hardware support.\nThe downside is related to the shared key.\nIf the key is captured by an attacker or if it is lost by one of the ends, confidentiality is compromised."),(0,a.yg)("p",null,"So, the goal is that each connection should use a temporary shared key.\nAfter the connection ends, the shared key is discarded.\nA new connection will generate a new key.\nOf course, that shared key must be known only by the two ends.\nFor this two happen, key exchange algorithms, such as ",(0,a.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange"},"Diffie Hellman")," are used."),(0,a.yg)("p",null,"Diffie-Hellman (often abbreviated as DH) is based on public-key encryption.\nIn short we use public-key encryption to set up a temporary shared key for the actual communication."),(0,a.yg)("p",null,"Public-key encryption, as its name implies, relies on a pair of private and public keys that are connected mathematically.\nRSA (",(0,a.yg)("em",{parentName:"p"},"Rivest Shamir Adleman")," - named after its inventors) is the classical public key cryptographic algorithm.\nThe private key is generated as a random set of bytes and the public key is generated from it, via a mathematical algorithm.\nThe private key is only available to the owner, whereas the public key is available to everyone.\nAnyone can encrypt a message using the public key, but only the owner can decrypt the message using the private key, as shown below."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"public-key encryption",src:n(9076).A,width:"1062",height:"670"})),(0,a.yg)("p",null,"Because of this, public-key encryption is considered more secure than symmetric encryption, as it doesn't require the passing of a shared key between parties, an act that may be intercepted.\nAt the same time, public-key encryption is much slower than symmetric encryption.\nBecause of this, public-key encryption is only used to set up an initial session and enable a key exchange algorithm (such as Diffie-Hellman) to generate a temporary session-specific shared key."),(0,a.yg)("h3",{id:"identity-management-certificates"},"Identity Management. Certificates"),(0,a.yg)("p",null,"A public-private key pair is not only used for encryption.\nIt's also used for identity management."),(0,a.yg)("p",null,"Identity management means making sure a given entity is who they claim they are.\nIn HTTPS that means that if we connect to ",(0,a.yg)("inlineCode",{parentName:"p"},"google.com")," we are offered guarantees that the server we connect to is indeed ",(0,a.yg)("inlineCode",{parentName:"p"},"google.com"),".\nOtherwise, another server could impersonate the target server and capture all traffic."),(0,a.yg)("p",null,"Identity management relies on signing and verifying messages using public-private keys.\nThe private key is used to sign a message.\nThe signed message is provided publicly.\nThen, the public key is used to verify the message.\nThis is called a ",(0,a.yg)("strong",{parentName:"p"},"digital signature"),", as shown below:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"digital signature",src:n(5764).A,width:"1062",height:"670"})),(0,a.yg)("p",null,"In HTTPS, this means that the web server will sign the message with its private key and web clients will verify the message with the public key."),(0,a.yg)("p",null,"In order for this to work, the public key has to be attached the identity: the name of the server.\nThis is done via a ",(0,a.yg)("strong",{parentName:"p"},"digital certificate"),".\nA certificate is a file that consists of a public key and an identity.\nA certificate itself is also signed to ensure its validity.\nThis means that a certificate will also be verified using a public key, found as part of another certificate, as shown below:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"digital certificate",src:n(3972).A,width:"660",height:"457"})),(0,a.yg)("p",null,"This dependency between certificates creates a ",(0,a.yg)("strong",{parentName:"p"},"public-key infrastructure")," (PKI), on top of which self-signed root certificates are located.\nSelf-signed root certificates part of ",(0,a.yg)("strong",{parentName:"p"},"Certification Authorities"),".\nThese are entities that sign other certificates to validate the binding of a public key to an identity."),(0,a.yg)("p",null,"A browser stores root certificates as part of its default installation.\nEach connection to the server will get the server to provide the certificate: identity and public key.\nThe browser uses the root certificate and intermediary certificates to verify the certificate.\nAfter its verification the public key is used to create the actual HTTPS (secure) connection."),(0,a.yg)("h3",{id:"inspecting-certificates"},"Inspecting Certificates"),(0,a.yg)("p",null,"To get a better understanding of how certificates work, let's take a look at one."),(0,a.yg)("p",null,"In order to get a certificate to inspect, it is easiest to export a root certificate from a browser.\nIn Firefox, we can use the Certificate Manager, as shown in the image below to export a certificate:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"Firefox Certificate Manager",src:n(3913).A,width:"962",height:"664"})),(0,a.yg)("p",null,"The CA (root) certificate from Verisign is located in ",(0,a.yg)("inlineCode",{parentName:"p"},"media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt"),".\nThe certificate, as most certificates, is exported in PEM (",(0,a.yg)("em",{parentName:"p"},"Privacy Enhanced Mail"),") format, a Base64 encoding:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ cat media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt\n-----BEGIN CERTIFICATE-----\nMIIEGjCCAwICEQCLW3VWhFSFCwDPrzhIzrGkMA0GCSqGSIb3DQEBBQUAMIHKMQsw\nCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZl\ncmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWdu\nLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT\naWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3Jp\ndHkgLSBHMzAeFw05OTEwMDEwMDAwMDBaFw0zNjA3MTYyMzU5NTlaMIHKMQswCQYD\nVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT\naWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5IFZlcmlTaWduLCBJ\nbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlTaWdu\nIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkg\nLSBHMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN2E1Lm0+afY8wR4\nnN493GwTFtl63SRRZsDHJlkNrAYIwpTRMx/wgzUfbhvI3qpuFU5UJ+/EbRrsC+MO\n8ESlV8dAWB6jRx9x7GD2bZTIGDnt/kIYVt/kTEkQeE4BdjVjEjbdZrwBBDajVWjV\nojYJrKshJlQGrT/KFOCsyq0GHZXi+J3x4GD/wn91K0zM2v6HmSHquv4+VNfSWXjb\nPG7PoBMAGrgnoeS+Z5bKoMWznN3JdZ7rMJpfo83ZrngZPyPpXNspva1VyBtUjGP2\n6KbqxzcSXKMpHgLZ2x87tNcPVkeBFQRKr4Mn0cVYiMHd9qqnoxjaaKptEVHhv2Vr\nn5Z20T0CAwEAATANBgkqhkiG9w0BAQUFAAOCAQEAq2aN17O6x5q25lXQBfGfMY1a\nqtmqRiYPce2lrVNWYgFHKkTp/j90CxObufRNG7LRX7K20ohcs5/Ny9Sn2WCVhDr4\nwTcdYcrnsMXlkdpUpqwxga6X3s0IrLjAl4B/bnKk52kTlWUfxJM8/XmPBNQ+T+r3\nns7NZ3xPZQL/kYVUc8f/NveGLezQXk//EZ9yBta4GvFMDSZl4kSAHsef493oCtrs\npSCAaWihT37ha88HQfqDjrw43bAuEbFrskLMmrz5SCJ5ShkPshw+IHTZasO+8ih4\nE1Z5T21Q6huwtVexN2ZYI/PcD98Kh8TvhgXVOBRgmaNL3gaWcSzy27YfpO8/7g==\n-----END CERTIFICATE-----\n")),(0,a.yg)("p",null,"In its basic format, the certificate is a binary file.\nThe PEM format is used to make it printable.\nThe PEM format is also used for storing private and public SSH keys, so it may seem familiar."),(0,a.yg)("p",null,"We can inspect the certificate with ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'$ openssl x509 -noout -text -in media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            8b:5b:75:56:84:54:85:0b:00:cf:af:38:48:ce:b1:a4\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C = US, O = "VeriSign, Inc.", OU = VeriSign Trust Network, OU = "(c) 1999 VeriSign, Inc. - For authorized use only", CN = VeriSign Class 1 Public Primary Certification Authority - G3\n        Validity\n            Not Before: Oct  1 00:00:00 1999 GMT\n            Not After : Jul 16 23:59:59 2036 GMT\n        Subject: C = US, O = "VeriSign, Inc.", OU = VeriSign Trust Network, OU = "(c) 1999 VeriSign, Inc. - For authorized use only", CN = VeriSign Class 1 Public Primary Certification Authority - G3\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:dd:84:d4:b9:b4:f9:a7:d8:f3:04:78:9c:de:3d:\n                    dc:6c:13:16:d9:7a:dd:24:51:66:c0:c7:26:59:0d:\n                    ac:06:08:c2:94:d1:33:1f:f0:83:35:1f:6e:1b:c8:\n                    de:aa:6e:15:4e:54:27:ef:c4:6d:1a:ec:0b:e3:0e:\n                    f0:44:a5:57:c7:40:58:1e:a3:47:1f:71:ec:60:f6:\n                    6d:94:c8:18:39:ed:fe:42:18:56:df:e4:4c:49:10:\n                    78:4e:01:76:35:63:12:36:dd:66:bc:01:04:36:a3:\n                    55:68:d5:a2:36:09:ac:ab:21:26:54:06:ad:3f:ca:\n                    14:e0:ac:ca:ad:06:1d:95:e2:f8:9d:f1:e0:60:ff:\n                    c2:7f:75:2b:4c:cc:da:fe:87:99:21:ea:ba:fe:3e:\n                    54:d7:d2:59:78:db:3c:6e:cf:a0:13:00:1a:b8:27:\n                    a1:e4:be:67:96:ca:a0:c5:b3:9c:dd:c9:75:9e:eb:\n                    30:9a:5f:a3:cd:d9:ae:78:19:3f:23:e9:5c:db:29:\n                    bd:ad:55:c8:1b:54:8c:63:f6:e8:a6:ea:c7:37:12:\n                    5c:a3:29:1e:02:d9:db:1f:3b:b4:d7:0f:56:47:81:\n                    15:04:4a:af:83:27:d1:c5:58:88:c1:dd:f6:aa:a7:\n                    a3:18:da:68:aa:6d:11:51:e1:bf:65:6b:9f:96:76:\n                    d1:3d\n                Exponent: 65537 (0x10001)\n    Signature Algorithm: sha1WithRSAEncryption\n         ab:66:8d:d7:b3:ba:c7:9a:b6:e6:55:d0:05:f1:9f:31:8d:5a:\n         aa:d9:aa:46:26:0f:71:ed:a5:ad:53:56:62:01:47:2a:44:e9:\n         fe:3f:74:0b:13:9b:b9:f4:4d:1b:b2:d1:5f:b2:b6:d2:88:5c:\n         b3:9f:cd:cb:d4:a7:d9:60:95:84:3a:f8:c1:37:1d:61:ca:e7:\n         b0:c5:e5:91:da:54:a6:ac:31:81:ae:97:de:cd:08:ac:b8:c0:\n         97:80:7f:6e:72:a4:e7:69:13:95:65:1f:c4:93:3c:fd:79:8f:\n         04:d4:3e:4f:ea:f7:9e:ce:cd:67:7c:4f:65:02:ff:91:85:54:\n         73:c7:ff:36:f7:86:2d:ec:d0:5e:4f:ff:11:9f:72:06:d6:b8:\n         1a:f1:4c:0d:26:65:e2:44:80:1e:c7:9f:e3:dd:e8:0a:da:ec:\n         a5:20:80:69:68:a1:4f:7e:e1:6b:cf:07:41:fa:83:8e:bc:38:\n         dd:b0:2e:11:b1:6b:b2:42:cc:9a:bc:f9:48:22:79:4a:19:0f:\n         b2:1c:3e:20:74:d9:6a:c3:be:f2:28:78:13:56:79:4f:6d:50:\n         ea:1b:b0:b5:57:b1:37:66:58:23:f3:dc:0f:df:0a:87:c4:ef:\n         86:05:d5:38:14:60:99:a3:4b:de:06:96:71:2c:f2:db:b6:1f:\n         a4:ef:3f:ee\n')),(0,a.yg)("p",null,"The options passed to the ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl")," command are:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"x509"),": work with X.509 certificates - a standard for certificates"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-noout"),": do not print the PEM output of the certificate"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-text"),": print as text the contents of the certificate"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-in"),": the input certificate file")),(0,a.yg)("p",null,"As shown in the output, a certificate comprises of data and the signature of that data.\nThe data is primarily composed of the:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"identity (the ",(0,a.yg)("inlineCode",{parentName:"li"},"Subject")," attribute): ",(0,a.yg)("inlineCode",{parentName:"li"},'C = US, O = "VeriSign, Inc.", OU = VeriSign Trust Network, OU = "(c) 1999 VeriSign, Inc. - For authorized use only", CN = VeriSign Class 1 Public Primary Certification Authority - G3')),(0,a.yg)("li",{parentName:"ul"},"the public key (comprised of a ",(0,a.yg)("inlineCode",{parentName:"li"},"Modulus")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"Exponent"),")")),(0,a.yg)("p",null,"There are two other important items:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"the issuer, i.e. the entity that signed the certificate;\nin this case, it's a self signed certificate, so the ",(0,a.yg)("inlineCode",{parentName:"li"},"Issuer")," is the same as the ",(0,a.yg)("inlineCode",{parentName:"li"},"Subject")),(0,a.yg)("li",{parentName:"ul"},"the validity of the certificate, in this case it's ",(0,a.yg)("inlineCode",{parentName:"li"},"July 16, 2036"))),(0,a.yg)("p",null,"Generally, a certificate is only valid for one year and then it will have to be renewed.\nRenewing means a new public key is generated and, together with the same identity information, a new certificate."),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl")," utility has command-line options to only print parts of the certificate.\nFor example, to only print the issuer or the public key, we would use the ",(0,a.yg)("inlineCode",{parentName:"p"},"-issuer")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"-pubkey")," options:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'$ openssl x509 -noout -issuer -in media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt\nissuer=C = US, O = "VeriSign, Inc.", OU = VeriSign Trust Network, OU = "(c) 1999 VeriSign, Inc. - For authorized use only", CN = VeriSign Class 1 Public Primary Certification Authority - G3\n\n$ openssl x509 -noout -pubkey -in media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3YTUubT5p9jzBHic3j3c\nbBMW2XrdJFFmwMcmWQ2sBgjClNEzH/CDNR9uG8jeqm4VTlQn78RtGuwL4w7wRKVX\nx0BYHqNHH3HsYPZtlMgYOe3+QhhW3+RMSRB4TgF2NWMSNt1mvAEENqNVaNWiNgms\nqyEmVAatP8oU4KzKrQYdleL4nfHgYP/Cf3UrTMza/oeZIeq6/j5U19JZeNs8bs+g\nEwAauCeh5L5nlsqgxbOc3cl1nuswml+jzdmueBk/I+lc2ym9rVXIG1SMY/bopurH\nNxJcoykeAtnbHzu01w9WR4EVBEqvgyfRxViIwd32qqejGNpoqm0RUeG/ZWuflnbR\nPQIDAQAB\n-----END PUBLIC KEY-----\n')),(0,a.yg)("h3",{id:"verifying-certificates"},"Verifying Certificates"),(0,a.yg)("p",null,"As the VeriSign certificate is self-signed, we can use it to verify itself:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl verify -CAfile media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt media/VerisignClass1PublicPrimaryCertificationAuthority-G3.crt: OK\n")),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"-CAfile")," option points to the CA certificate to verify the current one.\nAs this is is a self signed certificate, we use itself as CA."),(0,a.yg)("h2",{id:"https-ssl-and-tls"},"HTTPS, SSL and TLS"),(0,a.yg)("p",null,"HTTPS is the secure version of HTTP providing identity management, confidentiality and integrity.\nHTTPS relies on at least the HTTP server providing a certificate that validates the identity.\nThe client can also do that, as part of ",(0,a.yg)("a",{parentName:"p",href:"https://comodosslstore.com/blog/what-is-ssl-tls-client-authentication-how-does-it-work.html"},"client certificate authentication"),"."),(0,a.yg)("p",null,"After validating the identity of the server, the client-server pair create a secure channel by agreeing on a per-session shared symmetric encryption key.\nThis is negotiated via a key-exchange algorithm such as Diffie-Hellman.\nThen, all traffic between client and server will be encrypted."),(0,a.yg)("p",null,"This entire process is facilitated by the use of SSL (",(0,a.yg)("em",{parentName:"p"},"Secure Sockets Layer"),") or TLS (",(0,a.yg)("em",{parentName:"p"},"Transport Layer Security"),").\nWe say that HTTPS is HTTP plus SSL / TLS support.\nNote that this is the case with other secure protocol variants such as SMTPS, IMAPS, LDAPS."),(0,a.yg)("p",null,"SSL / TLS usually refer to the same thing.\nTLS is a newer version of the protocol.\nVersion are SSL1.0, SSL2.0, SSL3.0, TLS1.0, TLS1.1, TLS1.2, TLS1.3.\nEach newer version comes with fixes and extra security guarantees.\nNowadays (2022) all SSL versions and TLS1.0 are considered insecure.\nThis is due both to internal design issues and to weak cryptographic algorithms or the allowing cryptographic keys of insufficient size."),(0,a.yg)("p",null,"A summary of attacks on SSL / TLS is summarized as part of ",(0,a.yg)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7457"},"RFC 7457"),".\nAdditional information can be found ",(0,a.yg)("a",{parentName:"p",href:"https://www.acunetix.com/blog/articles/tls-vulnerabilities-attacks-final-part/"},"here")," and ",(0,a.yg)("a",{parentName:"p",href:"https://www.cloudinsidr.com/content/known-attack-vectors-against-tls-implementation-vulnerabilities/"},"here"),".\nWell known SSL / TLS attacks are:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://weakdh.org/logjam.html"},"Logjam")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"http://backronym.fail/"},"BACKRONYM")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://drownattack.com/"},"DROWN"))),(0,a.yg)("p",null,"A typical target of the attacker is downgrading the connection from HTTPS to HTTP.\nOr downgrading the SSL / TLS protocol version to a less secure variant.\nRead more on protocol downgrade ",(0,a.yg)("a",{parentName:"p",href:"https://www.venafi.com/blog/preventing-downgrade-attacks"},"here"),"."),(0,a.yg)("h3",{id:"capturing-inspecting-and-verifying-https-certificates"},"Capturing, Inspecting and Verifying HTTPS Certificates"),(0,a.yg)("p",null,"If you want to extract and inspect the certificate of an HTTPS server we would use the command below:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl s_client -showcerts -connect www.google.com:443 -servername www.google.com < /dev/null\nCONNECTED(00000005)\ndepth=2 C = US, O = Google Trust Services LLC, CN = GTS Root R1\nverify return:1\ndepth=1 C = US, O = Google Trust Services LLC, CN = GTS CA 1C3\nverify return:1\ndepth=0 CN = www.google.com\nverify return:1\n---\nCertificate chain\n 0 s:CN = www.google.com\n   i:C = US, O = Google Trust Services LLC, CN = GTS CA 1C3\n-----BEGIN CERTIFICATE-----\nMIIEiTCCA3GgAwIBAgIRAJ8HSxF0Xxb8EiN1+lh5k/AwDQYJKoZIhvcNAQELBQAw\nRjELMAkGA1UEBhMCVVMxIjAgBgNVBAoTGUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBM\nTEMxEzARBgNVBAMTCkdUUyBDQSAxQzMwHhcNMjIwNjA2MDk0MDAwWhcNMjIwODI5\nMDkzOTU5WjAZMRcwFQYDVQQDEw53d3cuZ29vZ2xlLmNvbTBZMBMGByqGSM49AgEG\nCCqGSM49AwEHA0IABD8O7cXWSPQhh/GihqJi+gdtpS0vAt2GeDRHBaVeB8x5dDtx\n3us2TGW2WJGfC7VeSVHCX1uDXkjAIOTauMUjCu2jggJoMIICZDAOBgNVHQ8BAf8E\nBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDAYDVR0TAQH/BAIwADAdBgNVHQ4E\nFgQUWVwHKuk+m9ZD0/h/+Jsgactucp8wHwYDVR0jBBgwFoAUinR/r4XN7pXNPZzQ\n4kYU83E1HScwagYIKwYBBQUHAQEEXjBcMCcGCCsGAQUFBzABhhtodHRwOi8vb2Nz\ncC5wa2kuZ29vZy9ndHMxYzMwMQYIKwYBBQUHMAKGJWh0dHA6Ly9wa2kuZ29vZy9y\nZXBvL2NlcnRzL2d0czFjMy5kZXIwGQYDVR0RBBIwEIIOd3d3Lmdvb2dsZS5jb20w\nIQYDVR0gBBowGDAIBgZngQwBAgEwDAYKKwYBBAHWeQIFAzA8BgNVHR8ENTAzMDGg\nL6AthitodHRwOi8vY3Jscy5wa2kuZ29vZy9ndHMxYzMvUU92SjBOMXNUMkEuY3Js\nMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAUaOw9f0BeZxWbbg3eI8MpHrMGyfL\n956IQpoN/tSLBeUAAAGBOJmjFwAABAMARzBFAiEA7Pub0IWm5kMWJrfJGLqP4lZU\n71J6No/RLMwsvXWzVfACICJMzt/AFBsNQ1t970tVRnhmgsgz2s6deykihInBRfZR\nAHcARqVV63X6kSAwtaKJafTzfREsQXS+/Um4havy/HD+bUcAAAGBOJmjPwAABAMA\nSDBGAiEA92vym4NTX/SmjhAx7ICLE4KXpQFsWfhvRf1m5B6qby8CIQCVyyWh2t22\nUhaaKSS+nIypJ9jWtOO4wG1gVkty8c/XETANBgkqhkiG9w0BAQsFAAOCAQEAI8fX\nMKLNXXoMJk6WTJvV1ORE6kYVtyZm0wM64yV9V1zmksWDgOx9xHmoAUTQYeSq6rhI\ntTxgb9EmDF8gVrOXwY31WpWjJyJQAfQcn3LhPUzJnr8yqyiwfVD1FG5gKQTTlblr\ng9sZ+zfETFPXTFJeGT5yBxcT8xQDQNERblVkaQ1H5f2XYuXAJJ4vlNCu7AFil1tp\nU4bau/EfQPx5Jd1bLxJwbeF9FbuQvcMeow+4ElcpC5BSkzsRk7lUbZfj7NWZas5t\n3yp0UncNl+Pib3p0ooLDJ3HQvlQuL4AAg2nYkL+UKusZ9d/22RmbiyGkqr+3L/3+\nPKvAVy9/DNPwW3YUbQ==\n-----END CERTIFICATE-----\n 1 s:C = US, O = Google Trust Services LLC, CN = GTS CA 1C3\n   i:C = US, O = Google Trust Services LLC, CN = GTS Root R1\n-----BEGIN CERTIFICATE-----\nMIIFljCCA36gAwIBAgINAgO8U1lrNMcY9QFQZjANBgkqhkiG9w0BAQsFADBHMQsw\nCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEU\nMBIGA1UEAxMLR1RTIFJvb3QgUjEwHhcNMjAwODEzMDAwMDQyWhcNMjcwOTMwMDAw\nMDQyWjBGMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZp\nY2VzIExMQzETMBEGA1UEAxMKR1RTIENBIDFDMzCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAPWI3+dijB43+DdCkH9sh9D7ZYIl/ejLa6T/belaI+KZ9hzp\nkgOZE3wJCor6QtZeViSqejOEH9Hpabu5dOxXTGZok3c3VVP+ORBNtzS7XyV3NzsX\nlOo85Z3VvMO0Q+sup0fvsEQRY9i0QYXdQTBIkxu/t/bgRQIh4JZCF8/ZK2VWNAcm\nBA2o/X3KLu/qSHw3TT8An4Pf73WELnlXXPxXbhqW//yMmqaZviXZf5YsBvcRKgKA\ngOtjGDxQSYflispfGStZloEAoPtR28p3CwvJlk/vcEnHXG0g/Zm0tOLKLnf9LdwL\ntmsTDIwZKxeWmLnwi/agJ7u2441Rj72ux5uxiZ0CAwEAAaOCAYAwggF8MA4GA1Ud\nDwEB/wQEAwIBhjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwEgYDVR0T\nAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUinR/r4XN7pXNPZzQ4kYU83E1HScwHwYD\nVR0jBBgwFoAU5K8rJnEaK0gnhS9SZizv8IkTcT4waAYIKwYBBQUHAQEEXDBaMCYG\nCCsGAQUFBzABhhpodHRwOi8vb2NzcC5wa2kuZ29vZy9ndHNyMTAwBggrBgEFBQcw\nAoYkaHR0cDovL3BraS5nb29nL3JlcG8vY2VydHMvZ3RzcjEuZGVyMDQGA1UdHwQt\nMCswKaAnoCWGI2h0dHA6Ly9jcmwucGtpLmdvb2cvZ3RzcjEvZ3RzcjEuY3JsMFcG\nA1UdIARQME4wOAYKKwYBBAHWeQIFAzAqMCgGCCsGAQUFBwIBFhxodHRwczovL3Br\naS5nb29nL3JlcG9zaXRvcnkvMAgGBmeBDAECATAIBgZngQwBAgIwDQYJKoZIhvcN\nAQELBQADggIBAIl9rCBcDDy+mqhXlRu0rvqrpXJxtDaV/d9AEQNMwkYUuxQkq/BQ\ncSLbrcRuf8/xam/IgxvYzolfh2yHuKkMo5uhYpSTld9brmYZCwKWnvy15xBpPnrL\nRklfRuFBsdeYTWU0AIAaP0+fbH9JAIFTQaSSIYKCGvGjRFsqUBITTcFTNvNCCK9U\n+o53UxtkOCcXCb1YyRt8OS1b887U7ZfbFAO/CVMkH8IMBHmYJvJh8VNS/UKMG2Yr\nPxWhu//2m+OBmgEGcYk1KCTd4b3rGS3hSMs9WYNRtHTGnXzGsYZbr8w0xNPM1IER\nlQCh9BIiAfq0g3GvjLeMcySsN1PCAJA/Ef5c7TaUEDu9Ka7ixzpiO2xj2YC/WXGs\nYye5TBeg2vZzFb8q3o/zpWwygTMD0IZRcZk0upONXbVRWPeyk+gB9lm+cZv9TSjO\nz23HFtz30dZGm6fKa+l3D/2gthsjgx0QGtkJAITgRNOidSOzNIb2ILCkXhAd4FJG\nAJ2xDx8hcFH1mt0G/FX0Kw4zd8NLQsLxdxP8c4CU6x+7Nz/OAipmsHMdMqUybDKw\njuDEI/9bfU1lcKwrmz3O2+BtjjKAvpafkmO8l7tdufThcV4q5O8DIrGKZTqPwJNl\n1IXNDw9bg1kWRxYtnCQ6yICmJhSFm/Y3m6xv+cXDBlHz4n/FsRC6UfTd\n-----END CERTIFICATE-----\n 2 s:C = US, O = Google Trust Services LLC, CN = GTS Root R1\n   i:C = BE, O = GlobalSign nv-sa, OU = Root CA, CN = GlobalSign Root CA\n-----BEGIN CERTIFICATE-----\nMIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX\nMQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE\nCxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx\nOTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT\nGUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63\nladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS\niV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k\nKSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ\nDrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk\nj5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5\ncuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW\nCruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499\niYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei\nEua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap\nsZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b\n9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf\nBgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw\nJQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH\nMAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al\noCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy\nMAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF\nAwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9\nNR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9\nWprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw\n9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy\n+qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi\nd0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8=\n-----END CERTIFICATE-----\n---\nServer certificate\nsubject=CN = www.google.com\n\nissuer=C = US, O = Google Trust Services LLC, CN = GTS CA 1C3\n\n---\nNo client certificate CA names sent\nPeer signing digest: SHA256\nPeer signature type: ECDSA\nServer Temp Key: X25519, 253 bits\n---\nSSL handshake has read 4295 bytes and written 396 bytes\nVerification: OK\n---\nNew, TLSv1.3, Cipher is TLS_AES_256_GCM_SHA384\nServer public key is 256 bit\nSecure Renegotiation IS NOT supported\nCompression: NONE\nExpansion: NONE\nNo ALPN negotiated\nEarly data was not sent\nVerify return code: 0 (ok)\n---\nDONE\n")),(0,a.yg)("p",null,"The command is pretty verbose.\nWe can make it print just the certificates by using:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl s_client -showcerts -connect www.google.com:443 -servername www.google.com < /dev/null 2> /dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'\n-----BEGIN CERTIFICATE-----\nMIIEiTCCA3GgAwIBAgIRAJ8HSxF0Xxb8EiN1+lh5k/AwDQYJKoZIhvcNAQELBQAw\nRjELMAkGA1UEBhMCVVMxIjAgBgNVBAoTGUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBM\nTEMxEzARBgNVBAMTCkdUUyBDQSAxQzMwHhcNMjIwNjA2MDk0MDAwWhcNMjIwODI5\nMDkzOTU5WjAZMRcwFQYDVQQDEw53d3cuZ29vZ2xlLmNvbTBZMBMGByqGSM49AgEG\nCCqGSM49AwEHA0IABD8O7cXWSPQhh/GihqJi+gdtpS0vAt2GeDRHBaVeB8x5dDtx\n3us2TGW2WJGfC7VeSVHCX1uDXkjAIOTauMUjCu2jggJoMIICZDAOBgNVHQ8BAf8E\nBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDAYDVR0TAQH/BAIwADAdBgNVHQ4E\nFgQUWVwHKuk+m9ZD0/h/+Jsgactucp8wHwYDVR0jBBgwFoAUinR/r4XN7pXNPZzQ\n4kYU83E1HScwagYIKwYBBQUHAQEEXjBcMCcGCCsGAQUFBzABhhtodHRwOi8vb2Nz\ncC5wa2kuZ29vZy9ndHMxYzMwMQYIKwYBBQUHMAKGJWh0dHA6Ly9wa2kuZ29vZy9y\nZXBvL2NlcnRzL2d0czFjMy5kZXIwGQYDVR0RBBIwEIIOd3d3Lmdvb2dsZS5jb20w\nIQYDVR0gBBowGDAIBgZngQwBAgEwDAYKKwYBBAHWeQIFAzA8BgNVHR8ENTAzMDGg\nL6AthitodHRwOi8vY3Jscy5wa2kuZ29vZy9ndHMxYzMvUU92SjBOMXNUMkEuY3Js\nMIIBBQYKKwYBBAHWeQIEAgSB9gSB8wDxAHYAUaOw9f0BeZxWbbg3eI8MpHrMGyfL\n956IQpoN/tSLBeUAAAGBOJmjFwAABAMARzBFAiEA7Pub0IWm5kMWJrfJGLqP4lZU\n71J6No/RLMwsvXWzVfACICJMzt/AFBsNQ1t970tVRnhmgsgz2s6deykihInBRfZR\nAHcARqVV63X6kSAwtaKJafTzfREsQXS+/Um4havy/HD+bUcAAAGBOJmjPwAABAMA\nSDBGAiEA92vym4NTX/SmjhAx7ICLE4KXpQFsWfhvRf1m5B6qby8CIQCVyyWh2t22\nUhaaKSS+nIypJ9jWtOO4wG1gVkty8c/XETANBgkqhkiG9w0BAQsFAAOCAQEAI8fX\nMKLNXXoMJk6WTJvV1ORE6kYVtyZm0wM64yV9V1zmksWDgOx9xHmoAUTQYeSq6rhI\ntTxgb9EmDF8gVrOXwY31WpWjJyJQAfQcn3LhPUzJnr8yqyiwfVD1FG5gKQTTlblr\ng9sZ+zfETFPXTFJeGT5yBxcT8xQDQNERblVkaQ1H5f2XYuXAJJ4vlNCu7AFil1tp\nU4bau/EfQPx5Jd1bLxJwbeF9FbuQvcMeow+4ElcpC5BSkzsRk7lUbZfj7NWZas5t\n3yp0UncNl+Pib3p0ooLDJ3HQvlQuL4AAg2nYkL+UKusZ9d/22RmbiyGkqr+3L/3+\nPKvAVy9/DNPwW3YUbQ==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFljCCA36gAwIBAgINAgO8U1lrNMcY9QFQZjANBgkqhkiG9w0BAQsFADBHMQsw\nCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEU\nMBIGA1UEAxMLR1RTIFJvb3QgUjEwHhcNMjAwODEzMDAwMDQyWhcNMjcwOTMwMDAw\nMDQyWjBGMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZp\nY2VzIExMQzETMBEGA1UEAxMKR1RTIENBIDFDMzCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAPWI3+dijB43+DdCkH9sh9D7ZYIl/ejLa6T/belaI+KZ9hzp\nkgOZE3wJCor6QtZeViSqejOEH9Hpabu5dOxXTGZok3c3VVP+ORBNtzS7XyV3NzsX\nlOo85Z3VvMO0Q+sup0fvsEQRY9i0QYXdQTBIkxu/t/bgRQIh4JZCF8/ZK2VWNAcm\nBA2o/X3KLu/qSHw3TT8An4Pf73WELnlXXPxXbhqW//yMmqaZviXZf5YsBvcRKgKA\ngOtjGDxQSYflispfGStZloEAoPtR28p3CwvJlk/vcEnHXG0g/Zm0tOLKLnf9LdwL\ntmsTDIwZKxeWmLnwi/agJ7u2441Rj72ux5uxiZ0CAwEAAaOCAYAwggF8MA4GA1Ud\nDwEB/wQEAwIBhjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwEgYDVR0T\nAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUinR/r4XN7pXNPZzQ4kYU83E1HScwHwYD\nVR0jBBgwFoAU5K8rJnEaK0gnhS9SZizv8IkTcT4waAYIKwYBBQUHAQEEXDBaMCYG\nCCsGAQUFBzABhhpodHRwOi8vb2NzcC5wa2kuZ29vZy9ndHNyMTAwBggrBgEFBQcw\nAoYkaHR0cDovL3BraS5nb29nL3JlcG8vY2VydHMvZ3RzcjEuZGVyMDQGA1UdHwQt\nMCswKaAnoCWGI2h0dHA6Ly9jcmwucGtpLmdvb2cvZ3RzcjEvZ3RzcjEuY3JsMFcG\nA1UdIARQME4wOAYKKwYBBAHWeQIFAzAqMCgGCCsGAQUFBwIBFhxodHRwczovL3Br\naS5nb29nL3JlcG9zaXRvcnkvMAgGBmeBDAECATAIBgZngQwBAgIwDQYJKoZIhvcN\nAQELBQADggIBAIl9rCBcDDy+mqhXlRu0rvqrpXJxtDaV/d9AEQNMwkYUuxQkq/BQ\ncSLbrcRuf8/xam/IgxvYzolfh2yHuKkMo5uhYpSTld9brmYZCwKWnvy15xBpPnrL\nRklfRuFBsdeYTWU0AIAaP0+fbH9JAIFTQaSSIYKCGvGjRFsqUBITTcFTNvNCCK9U\n+o53UxtkOCcXCb1YyRt8OS1b887U7ZfbFAO/CVMkH8IMBHmYJvJh8VNS/UKMG2Yr\nPxWhu//2m+OBmgEGcYk1KCTd4b3rGS3hSMs9WYNRtHTGnXzGsYZbr8w0xNPM1IER\nlQCh9BIiAfq0g3GvjLeMcySsN1PCAJA/Ef5c7TaUEDu9Ka7ixzpiO2xj2YC/WXGs\nYye5TBeg2vZzFb8q3o/zpWwygTMD0IZRcZk0upONXbVRWPeyk+gB9lm+cZv9TSjO\nz23HFtz30dZGm6fKa+l3D/2gthsjgx0QGtkJAITgRNOidSOzNIb2ILCkXhAd4FJG\nAJ2xDx8hcFH1mt0G/FX0Kw4zd8NLQsLxdxP8c4CU6x+7Nz/OAipmsHMdMqUybDKw\njuDEI/9bfU1lcKwrmz3O2+BtjjKAvpafkmO8l7tdufThcV4q5O8DIrGKZTqPwJNl\n1IXNDw9bg1kWRxYtnCQ6yICmJhSFm/Y3m6xv+cXDBlHz4n/FsRC6UfTd\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFYjCCBEqgAwIBAgIQd70NbNs2+RrqIQ/E8FjTDTANBgkqhkiG9w0BAQsFADBX\nMQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEQMA4GA1UE\nCxMHUm9vdCBDQTEbMBkGA1UEAxMSR2xvYmFsU2lnbiBSb290IENBMB4XDTIwMDYx\nOTAwMDA0MloXDTI4MDEyODAwMDA0MlowRzELMAkGA1UEBhMCVVMxIjAgBgNVBAoT\nGUdvb2dsZSBUcnVzdCBTZXJ2aWNlcyBMTEMxFDASBgNVBAMTC0dUUyBSb290IFIx\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAthECix7joXebO9y/lD63\nladAPKH9gvl9MgaCcfb2jH/76Nu8ai6Xl6OMS/kr9rH5zoQdsfnFl97vufKj6bwS\niV6nqlKr+CMny6SxnGPb15l+8Ape62im9MZaRw1NEDPjTrETo8gYbEvs/AmQ351k\nKSUjB6G00j0uYODP0gmHu81I8E3CwnqIiru6z1kZ1q+PsAewnjHxgsHA3y6mbWwZ\nDrXYfiYaRQM9sHmklCitD38m5agI/pboPGiUU+6DOogrFZYJsuB6jC511pzrp1Zk\nj5ZPaK49l8KEj8C8QMALXL32h7M1bKwYUH+E4EzNktMg6TO8UpmvMrUpsyUqtEj5\ncuHKZPfmghCN6J3Cioj6OGaK/GP5Afl4/Xtcd/p2h/rs37EOeZVXtL0m79YB0esW\nCruOC7XFxYpVq9Os6pFLKcwZpDIlTirxZUTQAs6qzkm06p98g7BAe+dDq6dso499\niYH6TKX/1Y7DzkvgtdizjkXPdsDtQCv9Uw+wp9U7DbGKogPeMa3Md+pvez7W35Ei\nEua++tgy/BBjFFFy3l3WFpO9KWgz7zpm7AeKJt8T11dleCfeXkkUAKIAf5qoIbap\nsZWwpbkNFhHax2xIPEDgfg1azVY80ZcFuctL7TlLnMQ/0lUTbiSw1nH69MG6zO0b\n9f6BQdgAmD06yK56mDcYBZUCAwEAAaOCATgwggE0MA4GA1UdDwEB/wQEAwIBhjAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTkrysmcRorSCeFL1JmLO/wiRNxPjAf\nBgNVHSMEGDAWgBRge2YaRQ2XyolQL30EzTSo//z9SzBgBggrBgEFBQcBAQRUMFIw\nJQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnBraS5nb29nL2dzcjEwKQYIKwYBBQUH\nMAKGHWh0dHA6Ly9wa2kuZ29vZy9nc3IxL2dzcjEuY3J0MDIGA1UdHwQrMCkwJ6Al\noCOGIWh0dHA6Ly9jcmwucGtpLmdvb2cvZ3NyMS9nc3IxLmNybDA7BgNVHSAENDAy\nMAgGBmeBDAECATAIBgZngQwBAgIwDQYLKwYBBAHWeQIFAwIwDQYLKwYBBAHWeQIF\nAwMwDQYJKoZIhvcNAQELBQADggEBADSkHrEoo9C0dhemMXoh6dFSPsjbdBZBiLg9\nNR3t5P+T4Vxfq7vqfM/b5A3Ri1fyJm9bvhdGaJQ3b2t6yMAYN/olUazsaL+yyEn9\nWprKASOshIArAoyZl+tJaox118fessmXn1hIVw41oeQa1v1vg4Fv74zPl6/AhSrw\n9U5pCZEt4Wi4wStz6dTZ/CLANx8LZh1J7QJVj2fhMtfTJr9w4z30Z209fOU0iOMy\n+qduBmpvvYuR7hZL6Dupszfnw0Skfths18dG9ZKb59UhvmaSGZRVbNQpsg3BZlvi\nd0lIKO2d1xozclOzgjXPYovJJIultzkMu34qQb9Sz/yilrbCgj8=\n-----END CERTIFICATE-----\n")),(0,a.yg)("p",null,"There are three certificates.\nThis is because the server is using a certificate chain.\nA ",(0,a.yg)("strong",{parentName:"p"},"certificate chain")," is when the CA signs and intermediate certificate which will then sign the actual certificate.\nOr multiple intermediate certificates.\nThis is used to decentralize the certificate signing process, creating the hierarchical public key infrastructure with self signed root CAs at the top."),(0,a.yg)("p",null,"We store the three certificates from Google in the ",(0,a.yg)("inlineCode",{parentName:"p"},"media/")," folder.\nWe inspect the subject and issuer of each:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl x509 -noout -subject -issuer -in media/google.crt\nsubject=CN = www.google.com\nissuer=C = US, O = Google Trust Services LLC, CN = GTS CA 1C3\n\n$ openssl x509 -noout -subject -issuer -in media/google_interm2.crt\nsubject=C = US, O = Google Trust Services LLC, CN = GTS CA 1C3\nissuer=C = US, O = Google Trust Services LLC, CN = GTS Root R1\n\n$ openssl x509 -noout -subject -issuer -in media/google_interm1.crt\nsubject=C = US, O = Google Trust Services LLC, CN = GTS Root R1\nissuer=C = BE, O = GlobalSign nv-sa, OU = Root CA, CN = GlobalSign Root CA\n")),(0,a.yg)("p",null,"The server certificate is for ",(0,a.yg)("inlineCode",{parentName:"p"},"www.google.com")," and is issued and signed by ",(0,a.yg)("inlineCode",{parentName:"p"},"C = US, O = Google Trust Services LLC, CN = GTS CA 1C3"),", who in turn is signed by ",(0,a.yg)("inlineCode",{parentName:"p"},"C = US, O = Google Trust Services LLC, CN = GTS Root R1"),", who in turn is signed by the GlobalSign Root CA.\nWe extracted the GlobalSign Root CA from Firefox and placed it in the ",(0,a.yg)("inlineCode",{parentName:"p"},"media/")," folder as well:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl x509 -noout -subject -issuer -in media/GlobalSignRootCA.crt\nsubject=C = BE, O = GlobalSign nv-sa, OU = Root CA, CN = GlobalSign Root CA\nissuer=C = BE, O = GlobalSign nv-sa, OU = Root CA, CN = GlobalSign Root CA\n")),(0,a.yg)("p",null,"To verify the entire security chain we use:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ cat google.crt google_interm2.crt google_interm1.crt > google_chain.crt\n$ openssl verify -CAfile google_interm2.crt google_chain.crt\ngoogle_chain.crt: OK\n")),(0,a.yg)("p",null,"The first command creates the ",(0,a.yg)("inlineCode",{parentName:"p"},"google_chain.crt")," file with the chain of certificates, the most specific certificate first.\nThe we use ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl verify")," to successfully verify the certificate chain."),(0,a.yg)("h3",{id:"validation-and-assessment-of-remote-certificates"},"Validation and Assessment of Remote Certificates"),(0,a.yg)("p",null,"Mostly for testing purposes, we want to know whether a given HTTPS server setup is valid and whether it is secure (i.e. it uses strong TLS parameters).\nFor this we can use the ",(0,a.yg)("a",{parentName:"p",href:"https://www.ssllabs.com/ssltest/"},"SSLTest Web App")," or the ",(0,a.yg)("a",{parentName:"p",href:"https://testssl.sh/"},(0,a.yg)("inlineCode",{parentName:"a"},"testssl.sh")," CLI tool"),"."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"SSLTest")),(0,a.yg)("p",null,"Using ",(0,a.yg)("a",{parentName:"p",href:"https://www.ssllabs.com/ssltest/"},"SSLTest")," is quite easy.\nEnter the URL of the target web server and then wait for the results.\nResults come in a grade summary, that's an average of several criteria, and a detailed analysis of the HTTPS security features."),(0,a.yg)("p",null,"Generally, it is advised to aim for a higher score.\nNote that a higher score may mean using certain security features that some browsers don't support.\nSo there needs to be a trade-off between security and browser support."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"testssl.sh")),(0,a.yg)("p",null,"Installing ",(0,a.yg)("inlineCode",{parentName:"p"},"testssl.sh")," is as simple as cloning ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/drwetter/testssl.sh"},"the repository")," and changing to a stable branch:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ git clone https://github.com/drwetter/testssl.sh\n[...]\n\n$ cd testssl.sh/\n\n$ git checkout -b v3.0.7 v3.0.7\n")),(0,a.yg)("p",null,"Now just pass an URL to the ",(0,a.yg)("inlineCode",{parentName:"p"},"testssl.sh")," script:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ ./testssl.sh security.cs.pub.ro\n")),(0,a.yg)("p",null,"If that doesn't work, you can use Docker as detailed in ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/drwetter/testssl.sh"},"the repository"),"."),(0,a.yg)("p",null,"The output is similar to the one from SSLTest.\nThe benefit of using ",(0,a.yg)("inlineCode",{parentName:"p"},"testssl.sh")," is it allows automation and it doesn't require a GUI browser to do the test."),(0,a.yg)("h2",{id:"summary-of-commands"},"Summary of Commands"),(0,a.yg)("p",null,"See below a summary of commands useful for working with HTTPS and digital certificates."),(0,a.yg)("p",null,"Capture HTTP packets and print their contents (ash human-readable ASCII characters):"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ sudo tcpdump -A tcp port 80\n")),(0,a.yg)("p",null,"Get remote web page:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ wget http://www.google.com\n\n$ wget https://www.google.com\n\n$ curl http://www.google.com\n\n$ curl https://www.google.com\n")),(0,a.yg)("p",null,"Inspect certificate file:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl x509 -noout -text -in certificate.crt\n\n$ openssl x509 -noout -subject -issuer -in certificate.crt\n")),(0,a.yg)("p",null,"Verify certificate:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl verify -CAfile CA.crt certificate.crt\n")),(0,a.yg)("p",null,"Extract certificate(s) from remote end:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ openssl s_client -showcerts -connect www.google.com:443 -servername www.google.com < /dev/null 2> /dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'\n")),(0,a.yg)("p",null,"Assess remote HTTPS and certificate security:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ ./testssl.sh security.cs.pub.ro\n")),(0,a.yg)("h2",{id:"challenges"},"Challenges"),(0,a.yg)("h3",{id:"01-investigate-ssltls-enabled-websites"},"01. Investigate SSL/TLS-enabled Websites"),(0,a.yg)("p",null,"Investigate the SSL/TLS configuration strength for different websites.\nUse:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.ssllabs.com/ssltest/"},"SSL Server Test from SSL Labs")," in a web browser"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://testssl.sh/"},"testssl.sh")," in the command line")),(0,a.yg)("p",null,"Investigate the following websites:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://curs.upb.ro/"},"https://curs.upb.ro/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://ing.ro/"},"https://ing.ro/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://senat.ro/"},"https://senat.ro/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://republica.ro/"},"https://republica.ro/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.emag.ro/"},"https://www.emag.ro/"))),(0,a.yg)("p",null,"Look for the following:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"the overall grade"),(0,a.yg)("li",{parentName:"ul"},"reasons for not getting the maximum grade"),(0,a.yg)("li",{parentName:"ul"},"certificate expiration date"),(0,a.yg)("li",{parentName:"ul"},"certification authority (CA)"),(0,a.yg)("li",{parentName:"ul"},"SSL/TLS version supported")),(0,a.yg)("p",null,"Fill the information above in a Google spreadsheet, a copy of ",(0,a.yg)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1ufpcQcwSL3LEziqg5tjBK-e7B2xVq0N5xiRcq9yeRHY/edit?usp=sharing"},"this one"),"."),(0,a.yg)("h3",{id:"02-investigate-remote-ssltls-certificates"},"02. Investigate Remote SSL/TLS Certificates"),(0,a.yg)("p",null,"Download, inspect and verify remote certificates.\nUse ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl s_client")," to download a certificate.\nUse ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl x509")," to investigate the downloaded certificate.\nUse the Certificate Manager-like interface in you browser to extract the corresponding root certificates.\nUse ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl verify")," to verify a certificate;\nuse the extracted root certificate."),(0,a.yg)("p",null,"Investigate the following websites:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://slack.com/"},"https://slack.com/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.pornhub.com/"},"https://www.pornhub.com/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.emag.ro/"},"https://www.emag.ro/"))),(0,a.yg)("h3",{id:"03-investigate-remote-ssltls-certificates-with-sni"},"03. Investigate Remote SSL/TLS Certificates with SNI"),(0,a.yg)("p",null,"Download, inspect and verify remote certificates."),(0,a.yg)("p",null,"Investigate the following websites:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://koala.cs.pub.ro"},"https://koala.cs.pub.ro")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://security.cs.pub.ro"},"https://security.cs.pub.ro")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://wiki.cs.pub.ro"},"https://wiki.cs.pub.ro"))),(0,a.yg)("p",null,"These websites are colocated on the same IP address:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"$ host security.cs.pub.ro\nsecurity.cs.pub.ro has address 141.85.227.114\nsecurity.cs.pub.ro mail is handled by 5 security.cs.pub.ro.\n\n$ host koala.cs.pub.ro\nkoala.cs.pub.ro has address 141.85.227.114\n\n$ host wiki.cs.pub.ro\nwiki.cs.pub.ro is an alias for koala.cs.pub.ro.\nkoala.cs.pub.ro has address 141.85.227.114\n")),(0,a.yg)("p",null,"So be sure to use ",(0,a.yg)("a",{parentName:"p",href:"https://major.io/2012/02/07/using-openssls-s_client-command-with-web-servers-using-server-name-indication-sni/"},"SNI support")," (",(0,a.yg)("em",{parentName:"p"},"Server Name Indication"),") for the ",(0,a.yg)("inlineCode",{parentName:"p"},"openssl s_client")," command to download the correct certificate.\nThis means using the ",(0,a.yg)("inlineCode",{parentName:"p"},"-servername")," option."),(0,a.yg)("h3",{id:"04-inspect-me-pem"},"04. Inspect Me PEM"),(0,a.yg)("p",null,"Get the flag from the certificate: ",(0,a.yg)("a",{parentName:"p",href:"https://sss-web.cyberedu.ro/challenge/25d5c870-fc5a-11ec-bf6f-33097481169b"},"https://sss-web.cyberedu.ro/challenge/25d5c870-fc5a-11ec-bf6f-33097481169b")),(0,a.yg)("h3",{id:"05-inspect-me-der"},"05. Inspect Me DER"),(0,a.yg)("p",null,"Get the flag from the certificate: ",(0,a.yg)("a",{parentName:"p",href:"https://sss-web.cyberedu.ro/challenge/82120dc0-fc5a-11ec-8907-a767cfc56b45"},"https://sss-web.cyberedu.ro/challenge/82120dc0-fc5a-11ec-8907-a767cfc56b45")),(0,a.yg)("h3",{id:"06-the-chosen-one"},"06. The Chosen One"),(0,a.yg)("p",null,"Find the correct certificate and get the flag from it: ",(0,a.yg)("a",{parentName:"p",href:"https://sss-web.cyberedu.ro/challenge/38b30e80-fc68-11ec-9c1f-6177b11a278c"},"https://sss-web.cyberedu.ro/challenge/38b30e80-fc68-11ec-9c1f-6177b11a278c")),(0,a.yg)("h3",{id:"07-proper-naming"},"07. Proper Naming"),(0,a.yg)("p",null,"Get the flag from ",(0,a.yg)("a",{parentName:"p",href:"http://141.85.224.117:3280"},"http://141.85.224.117:3280"),"\nSubmit the flag to: ",(0,a.yg)("a",{parentName:"p",href:"https://sss-web.cyberedu.ro/challenge/32215080-fc7b-11ec-940b-ad7b1c8e700c"},"https://sss-web.cyberedu.ro/challenge/32215080-fc7b-11ec-940b-ad7b1c8e700c")),(0,a.yg)("h3",{id:"08-inside"},"08. Inside"),(0,a.yg)("p",null,"Get the flag from ",(0,a.yg)("a",{parentName:"p",href:"http://141.85.224.117:3380"},"http://141.85.224.117:3380"),"\nSubmit the flag to: ",(0,a.yg)("a",{parentName:"p",href:"https://sss-web.cyberedu.ro/challenge/298a4d30-fc85-11ec-9624-c3b4658b387a"},"https://sss-web.cyberedu.ro/challenge/298a4d30-fc85-11ec-9624-c3b4658b387a")),(0,a.yg)("h3",{id:"09-only-for-members"},"09. Only for Members"),(0,a.yg)("p",null,"Connect via HTTPS to a ",(0,a.yg)("a",{parentName:"p",href:"https://141.85.224.117:31443"},"https://141.85.224.117:31443"),".\nUse client certificate authentication to retrieve the flag."),(0,a.yg)("p",null,"The client certificate needs to be signed by the same certification authority as that of the server.\nSee the files and scripts in the ",(0,a.yg)("inlineCode",{parentName:"p"},"securing-communication/media/ca/")," folder in the repository."),(0,a.yg)("p",null,"Submit flag to: ",(0,a.yg)("a",{parentName:"p",href:"https://sss-web.cyberedu.ro/challenge/c8d977d0-fc9c-11ec-80d9-0de38261593f"},"https://sss-web.cyberedu.ro/challenge/c8d977d0-fc9c-11ec-80d9-0de38261593f")),(0,a.yg)("h3",{id:"extra-tutorial-inspect-https-traffic"},"Extra: Tutorial: Inspect HTTPS Traffic"),(0,a.yg)("p",null,"In this tutorial challenge, we capture and aim to decrypt HTTPS traffic.\nWe use Wireshark to capture traffic."),(0,a.yg)("p",null,"To decrypt traffic, we need to have access to the private key of the server.\nCopy the contents of the private key from the Nginx server set up above, from the ",(0,a.yg)("inlineCode",{parentName:"p"},"/etc/letsencrypt/live/<hostname>/privkey.pem")," into a local file."),(0,a.yg)("p",null,"Start Wireshark (as ",(0,a.yg)("inlineCode",{parentName:"p"},"root"),").\nLoad the private key in Wireshark using instructions ",(0,a.yg)("a",{parentName:"p",href:"https://accedian.com/blog/how-to-decrypt-an-https-exchange-with-wireshark/"},"here"),"."),(0,a.yg)("p",null,"Start packet capture in Wireshark and filter packets to / from the IP address of the server.\nUse a string such as ",(0,a.yg)("inlineCode",{parentName:"p"},"ip.addr = <server_IP_address>")," in the filter line in Wireshark."),(0,a.yg)("p",null,"Use ",(0,a.yg)("inlineCode",{parentName:"p"},"curl")," to request the index page from the server:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"curl https://<hostname>\n")),(0,a.yg)("p",null,"Packet capture in Wireshark will not show decrypted content, similar to the image below."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"HTTPS not decrypted",src:n(8087).A,width:"866",height:"657"})),(0,a.yg)("p",null,"This is because, by default, the connection uses SSL / TLS ciphers with ",(0,a.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Forward_secrecy"},"PFS")," (",(0,a.yg)("em",{parentName:"p"},"Perfect Forward Secrecy"),") usually enabled with DHE (",(0,a.yg)("em",{parentName:"p"},"Diffie-Hellman Exchange"),").\nDon't bother with the acronyms and their significance, we use them to let you know the terms and maybe look for additional information later on."),(0,a.yg)("p",null,"However, we can request ",(0,a.yg)("inlineCode",{parentName:"p"},"curl")," to not use PFS, by choosing a simpler cipher.\nThis simple cipher will use the private key that we are in possession of (and that we loaded into Wireshark) to encrypt traffic.\nThis is also explained ",(0,a.yg)("a",{parentName:"p",href:"https://accedian.com/blog/how-to-decrypt-an-https-exchange-with-wireshark/"},"here"),"."),(0,a.yg)("p",null,"Use ",(0,a.yg)("inlineCode",{parentName:"p"},"curl")," to request the index page from the server with a simpler cipher that does not use DHE:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"curl --ciphers AES256-SHA https://<hostname>\n")),(0,a.yg)("p",null,"Now, the packet capture shows actual decrypted HTTP content, similar to the image below."),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"HTTPS decrypted",src:n(443).A,width:"969",height:"639"})),(0,a.yg)("p",null,"You can use ",(0,a.yg)("inlineCode",{parentName:"p"},"Right click")," -> ",(0,a.yg)("inlineCode",{parentName:"p"},"Follow")," -> ",(0,a.yg)("inlineCode",{parentName:"p"},"HTTP stream")," to extract the HTTP traffic only."),(0,a.yg)("p",null,"In summary, with access to the private key, if the cipher used in the HTTPS connection (HTTP + SSL / TLS) doesn't use DHE, we can decrypt the traffic.\nOf course, this requires access to the private key.\nIn an actual attack this is another part of the attack vector where some server-side vulnerability allows the extraction of the private key."),(0,a.yg)("h2",{id:"resources-and-tools"},"Resources and Tools"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.tcpdump.org/"},"tcpdump")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.wireshark.org/"},"Wireshark")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.openssl.org/"},"openssl")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs"},"OpenSSL Essentials")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.sslshopper.com/article-most-common-openssl-commands.html"},"The Most Common OpenSSL Commands")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://geekflare.com/openssl-commands-certificates/"},"OpenSSL Examples")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://jamielinux.com/docs/openssl-certificate-authority/index.html"},"OpenSSL Certificate Authority")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://testssl.sh/"},"testssl.sh")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.ssllabs.com/ssltest/"},"SSL Server Test from SSL Labs"))),(0,a.yg)("h2",{id:"further-reading"},"Further Reading"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://geekflare.com/ssl-test-certificate/"},"https://geekflare.com/ssl-test-certificate/")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.feistyduck.com/library/openssl-cookbook/"},"https://www.feistyduck.com/library/openssl-cookbook/"))))}d.isMDXComponent=!0},3434:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/symmetric-encryption-6e227ad773fb913530bde8ef5d75d770.svg"},3913:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/firefox-certificate-manager-01201e4f99a8047f176870214b4bab8c.png"},3972:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/digital-certificate-c01404532f2d6f6eeaebdf7712077e2d.png"},5680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>u});var i=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach(function(t){a(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef(function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),p=l(n),h=a,u=p["".concat(c,".").concat(h)]||p[h]||d[h]||r;return n?i.createElement(u,s(s({ref:t},g),{},{components:n})):i.createElement(u,s({ref:t},g))});function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<r;l++)s[l]=n[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5764:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/digital-signature-8e32778b1008aff82a80c4f076807aba.svg"},8087:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/wireshark-no-decrypt-0e193b8134a090ccdfa9ec7bf3ae2023.png"},9076:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/public-key-encryption-b45675b5e59900662c4b6ddc98f12202.svg"}}]);